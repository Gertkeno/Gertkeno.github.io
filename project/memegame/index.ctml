<!DOCTYPE html>
[html
	[head
		[title Project Page: Meme Game]
		[link{rel="stylesheet" type="text/css"}@../project.css ]
		[meta{charset="utf-8"}])
	]
	[body
		[h1 Meme Game]
		[h2 Legend]
		[ul
			[li [a@#Goals A Plan and Why]]
			[li [a@#Boss Boss Design]]
			[li [a@#Final Final Product]]
		]
		[br])
		[h2#Goals A Plan and Why]
		[p
			I followed the majority of [a@http://lazyfoo.net/tutorials/SDL/index.php#Hello%20SDL Lazy Foo's SDL Tutorials] and wrote some basic classes to make SDL2 rendering easier for me.
			After learning and building confidence with SDL2 I wanted to start one more game before switching to OpenGL.
		]
		[p
			I wanted to make a boss fight centered game, it seemed like a good genre to code a lot of specific, odd, and unique actions.
			I knew from my previous projects making art sucks. I wanted to do 90% code, 10% art.
			Doing so little of my own art would be tough for an original and creative project, at least without hiring a dedicated artist.
			Luckily I'm part of a community that to some degree appreciates memes, instead of art I could just pull stuff from the internet or streams.
			By pandering to this community I'm almost guaranteed some kind of audience, thus two problems solved in one decision.
		]
		[p
			For some reason I always wanted to attempt a cut-scene system, with boss rush genre in mind it would add some personality and/or jokes to the bosses.
			I made my own syntax for the cut-scene actions, other than specific sentinels it was just plain text files read in-game.
		]
		[p I wrote some basic Asteroids/LUFTRAUSERS movement, filled a test intro.txt with the opening of 2003's Daredevil, and made the demo video below.]
		[iframe{width="560" height="315" frameborder="0" allowfullscreen}$https://www.youtube.com/embed/5HffS-9dZHU?rel=0&amp;showinfo=0 ]
		[p
			I sent this video to a member of the previously mentioned community, name of [a@https://twitter.com/MakinBaconBot Makin Bacon Bot], in attempt to start collaborating with them.
			Thankfully Makin agreed to write the cut scenes for the game, and design the boss made after him.
		]

		[br])
		[h2#Boss Boss Design]
		[p
			I started out with FrankerZ (Dog Face no space), this boss was made to test projectiles and hurt/hit circles.
			Movement was very basic for this boss, just a set speed in a set direction, sometimes changing either variable.
			At this point in the project I just had a background, temporary player, and an emote from twitch, being FrankerZ.
			I made projectiles call a function pointer every time an ability variable was timed out, with FrankerZ I used this to add LilZ bullets that spurt out six more.
		]
		[div.code
	double ctTime = ( totalTime / totalAbilityCount );
	if( ability != nullptr && ( _lifeTime - ( _abilityCount \* ctTime ) > ctTime || totalAbilityCount == 0 ) )
	{
		ability( this );
		_abilityCount += 1;
	}
	bulletFunction::basicShot( this );
		]
		[p
			A lot of this code can be done better on a very direct level, all the timing math is a bit obtuse.
			Literally the only useful part in showing this is the function pointer [span.code ability] takes a [span.code Bullet] pointer.
		]
		[p
			By passing the projectile as [span.code this] I give the ability's function way more power than it needs, practically complete control over the bullet.
			This projectile feature was more robust than I was going to use, and made it annoying to initialize en masse.
			Current me would rather make an enumerated list of different abilities then union any specific variables needed for said enum list's contents.
		]


		[br])
		[h2#Final Final Product]
		[p Here's the video of the intended audience playing Meme Game.]
		[iframe{width="560" height="315" frameborder="0" allowfullscreen}$https://www.youtube.com/embed/Z1RxPUxIggQ?rel=0&amp;showinfo=0&amp;start=5925 ]
	]
]
